spring:
  profiles:
    active: discovery-cloud-primary
---
# primary, secondary, and tertiary illustrate running 2 intercommunicating instances.  This example has them running
# side-by-side on localhost -- which is unrealistic in production -- but does illustrate how multiple instances collaborate.
# Run by opening 2 separate command prompts:
# java -jar -Dspring.profiles.active=cloud-primary discovery-microservice-0.1.0.jar
# java -jar -Dspring.profiles.active=cloud-secondary discovery-microservice-0.1.0.jar
# java -jar -Dspring.profiles.active=cloud-tertiary discovery-microservice-0.1.0.jar
# If more than 2, specify comma separated list in serviceUrl.defaultZone
spring:
  profiles: discovery-cloud-primary
server:
  port: 8761
eureka:
  instance:
    hostname: discovery-primary
    nonSecurePort: 8761
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${cloud_host}:8762/eureka/
---
spring:
  profiles: discovery-cloud-secondary
server:
  port: 8762
eureka:
  instance:
    hostname: discovery-secondary
    nonSecurePort: 8762
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://${cloud_host}:8761/eureka/
---
spring:
  profiles: local
server:
  port: 8761
eureka:
  instance:
    hostname: discovery
    preferIpAddress: true
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/
